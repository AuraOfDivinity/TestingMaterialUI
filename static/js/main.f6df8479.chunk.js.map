{"version":3,"sources":["components/Navbar.js","components/EmployeeCard.js","components/EmployeeList.js","components/EmployeeDetails.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","AppBar","position","Toolbar","Typography","variant","color","useStyles","makeStyles","theme","card","display","details","flexDirection","content","flex","cover","width","controls","alignItems","paddingLeft","spacing","paddingBottom","playIcon","height","EmployeeCard","props","classes","employee","Card","className","CardMedia","image","fields","photo","file","url","CardContent","component","title","imageCaption","client","contentful","space","accessToken","EmployeeList","state","employees","searchString","selectedEmployee","getEmployees","getEntries","content_type","query","then","response","setState","items","catch","error","console","log","onSearchInputChange","event","target","value","handleChange","key","onSelectEmployee","this","sendData","TextField","style","padding","id","placeholder","margin","onChange","Grid","container","map","currentEmployee","item","xs","sm","lg","xl","border","background","Button","maxWidth","onClick","e","sys","Component","EmployeeDetails","currentItem","chosenOne","getEntry","imgLink","CardActionArea","gutterBottom","CardActions","size","fontSize","fontFamily","textAlign","React","App","handleSelection","employeeValue","Paper","minHeight","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f6df8479.chunk.js","sourcesContent":["import React from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst NavBar = () => {\r\n  return (\r\n    <div>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <Typography variant=\"title\" color=\"inherit\">\r\n            Employee Details Web App\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    display: \"flex\"\r\n  },\r\n  details: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\"\r\n  },\r\n  content: {\r\n    flex: \"1 0 auto\"\r\n  },\r\n  cover: {\r\n    width: \"25%\"\r\n  },\r\n  controls: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    paddingLeft: theme.spacing(1),\r\n    paddingBottom: theme.spacing(1)\r\n  },\r\n  playIcon: {\r\n    height: 38,\r\n    width: 38\r\n  }\r\n}));\r\n\r\nconst EmployeeCard = props => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div>\r\n      {props.employee ? (\r\n        <Card className={classes.card}>\r\n          <CardMedia\r\n            className={classes.cover}\r\n            image={props.employee.fields.photo.fields.file.url}\r\n          />\r\n          <div className={classes.details}>\r\n            <CardContent className={classes.content}>\r\n              <Typography component=\"h5\" variant=\"h5\">\r\n                {props.employee.fields.title}\r\n              </Typography>\r\n              <Typography variant=\"subtitle1\" color=\"textSecondary\">\r\n                {props.employee.fields.imageCaption}\r\n              </Typography>\r\n            </CardContent>\r\n          </div>\r\n        </Card>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmployeeCard;\r\n","import React, { Component } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport EmployeeCard from \"./EmployeeCard.js\";\r\nimport * as contentful from \"contentful\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst client = contentful.createClient({\r\n  space: \"g0omatv81ux3\",\r\n  accessToken: \"9Ulv6nTh08-nO_1Mu1pEoOrjVB2YxCV7mDBNE8UyXt0\"\r\n});\r\n\r\nclass EmployeeList extends Component {\r\n  state = {\r\n    employees: [],\r\n    searchString: \"\",\r\n    selectedEmployee: null\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    this.getEmployees();\r\n  }\r\n\r\n  getEmployees = () => {\r\n    client\r\n      .getEntries({\r\n        content_type: \"image\",\r\n        query: this.state.searchString\r\n      })\r\n      .then(response => {\r\n        this.setState({\r\n          employees: response.items\r\n        });\r\n      })\r\n      .catch(error => {\r\n        console.log(\"error occured while fetching data!\");\r\n      });\r\n  };\r\n\r\n  onSearchInputChange = event => {\r\n    if (event.target.value) {\r\n      this.setState({\r\n        searchString: event.target.value\r\n      });\r\n    } else {\r\n      this.setState({\r\n        searchString: \"\"\r\n      });\r\n    }\r\n    this.getEmployees();\r\n    console.log(this.state.employees);\r\n  };\r\n\r\n  sendDataUpstream(value) {\r\n    this.props.sendData();\r\n  }\r\n\r\n  handleChange = (key, event) => {\r\n    this.props.onSelectEmployee(key);\r\n    console.log(key);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.employees ? (\r\n          <div>\r\n            <TextField\r\n              style={{ padding: 24 }}\r\n              id=\"searchInput\"\r\n              placeholder=\"Enter search term here!\"\r\n              margin=\"normal\"\r\n              onChange={this.onSearchInputChange}\r\n            ></TextField>\r\n            <Grid container spacing={2} style={{ padding: 24 }}>\r\n              {this.state.employees.map(currentEmployee => (\r\n                <Grid\r\n                  item\r\n                  xs={12}\r\n                  sm={12}\r\n                  lg={12}\r\n                  xl={12}\r\n                  style={{\r\n                    border: \"1px solid #e3e3e3\",\r\n                    margin: 10,\r\n                    background: \"#edf4ff\"\r\n                  }}\r\n                >\r\n                  <EmployeeCard employee={currentEmployee}> </EmployeeCard>\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    color=\"primary\"\r\n                    style={{\r\n                      margin: \"10px\",\r\n                      maxWidth: 150\r\n                    }}\r\n                    onClick={e => this.handleChange(currentEmployee.sys.id, e)}\r\n                  >\r\n                    More Details\r\n                  </Button>\r\n                </Grid>\r\n              ))}\r\n            </Grid>\r\n          </div>\r\n        ) : (\r\n          \"No courses found!\"\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EmployeeList;\r\n","import React from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport \"typeface-roboto\";\r\nimport \"typeface-montserrat\";\r\n\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport * as contentful from \"contentful\";\r\n\r\nconst client = contentful.createClient({\r\n  space: \"g0omatv81ux3\",\r\n  accessToken: \"9Ulv6nTh08-nO_1Mu1pEoOrjVB2YxCV7mDBNE8UyXt0\"\r\n});\r\n\r\nclass EmployeeDetails extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      currentItem: [],\r\n      chosenOne: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    //Called after the initial mount of the component\r\n    client\r\n      .getEntry(this.props.chosenOne)\r\n      .then(items => {\r\n        this.setState({ currentItem: items });\r\n        // if (!payload.items.length) {\r\n        //   console.log(\"no payload\");\r\n        // } else {\r\n        //   console.log(\"payload found!\");\r\n        // }\r\n        console.log(this.state.currentItem.fields.photo.fields.file.url);\r\n      })\r\n      .catch(error => {\r\n        console.log(\"error occured\");\r\n      });\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if (this.props.chosenOne !== this.state.chosenOne)\r\n      //Without the if statement componentdidmount will infinitely loop\r\n      client\r\n        .getEntry(this.props.chosenOne)\r\n        .then(items => {\r\n          this.setState({\r\n            currentItem: items,\r\n            chosenOne: this.props.chosenOne,\r\n            imgLink: items.fields.photo.fields.file.url\r\n          });\r\n\r\n          console.log(this.state.imgLink);\r\n        })\r\n        .catch(error => {\r\n          console.log(\"error occured\");\r\n        });\r\n  }\r\n\r\n  render() {\r\n    if (this.props.chosenOne) {\r\n      return (\r\n        <div>\r\n          <Card style={{}}>\r\n            <CardActionArea>\r\n              <CardMedia\r\n                style={{\r\n                  height: 300,\r\n                  width: \"100%\",\r\n                  margin: \"0 auto\"\r\n                }}\r\n                image={this.state.currentItem.fields.photo.fields.file.url}\r\n              />\r\n              <CardContent>\r\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                  {this.state.currentItem.fields.title}\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                  {this.state.currentItem.fields.imageCaption}\r\n                </Typography>\r\n              </CardContent>\r\n            </CardActionArea>\r\n            <CardActions>\r\n              <Button size=\"small\" color=\"primary\">\r\n                Share\r\n              </Button>\r\n              <Button size=\"small\" color=\"primary\">\r\n                Learn More\r\n              </Button>\r\n            </CardActions>\r\n          </Card>\r\n        </div>\r\n      );\r\n    } else {\r\n      //Should render message\r\n      return (\r\n        <div\r\n          style={{\r\n            fontSize: \"30px\",\r\n            fontFamily: \"montserrat\",\r\n            textAlign: \"center\",\r\n            padding: \"70px 0\"\r\n          }}\r\n        >\r\n          Please select an employee from the left side to get more details\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default EmployeeDetails;\r\n","import React from \"react\";\nimport NavBar from \"./components/Navbar.js\";\nimport EmployeeList from \"./components/EmployeeList.js\";\nimport \"./App.css\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport EmployeeDetails from \"./components/EmployeeDetails.js\";\n\nclass App extends React.Component {\n  state = {\n    selectedEmployee: \"\"\n  };\n\n  handleSelection = employeeValue => {\n    this.setState({ selectedEmployee: employeeValue });\n  };\n\n  render() {\n    return (\n      <div>\n        <NavBar></NavBar>\n        <div>\n          <Grid container xs={12} spacing={5} style={{ padding: \"30px\" }}>\n            <Grid item xs={5}>\n              <Paper>\n                <EmployeeList onSelectEmployee={this.handleSelection} />\n              </Paper>\n            </Grid>\n            <Grid item xs={7}>\n              <Paper style={{ minHeight: \"100%\" }}>\n                <EmployeeDetails chosenOne={this.state.selectedEmployee} />\n              </Paper>\n            </Grid>\n          </Grid>\n        </div>\n      </div>\n    );\n  }\n}\n\n// function App() {\n//   return (\n//     <div>\n//       <NavBar></NavBar>\n//       <div>\n//         <Grid container xs={12} spacing={5} style={{ padding: \"30px\" }}>\n//           <Grid item xs={5}>\n//             <Paper>\n//               <EmployeeList />\n//             </Paper>\n//           </Grid>\n//           <Grid item xs={7}>\n//             <Paper style={{ minHeight: \"100%\" }}>\n//               <EmployeeDetails />\n//             </Paper>\n//           </Grid>\n//         </Grid>\n//       </div>\n//     </div>\n//   );\n// }\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}